# Kubernetes
function kmerge() {
  KUBECONFIG=~/.kube/config:$1 kubectl config view --flatten > ~/.kube/mergedkub && mv ~/.kube/mergedkub ~/.kube/config
}
alias kube-prometheus='kubectl port-forward -n prometheus statefulset.apps/prometheus-prometheus-operator-prometheus 9090:9090'
alias kcgc='kubectl config get-contexts'
alias kcuc='kubectl config use-context'
alias kd='kubectl describe'
alias kdrain='kubectl drain --ignore-daemonsets'
alias kds='kubectl describe -n kube-system'
alias ke='kubectl edit'
alias kedit='kubectl edit'
alias kexec='kubectl exec -it'
alias kg='kubectl get --show-kind=true'
alias kga='kg --all-namespaces'
alias kgaa='kga all'
alias kgaaw='kga all -o wide'
alias kgad='kga deployments'
alias kgadw='kga deployments -o wide'
alias kgagate='kga gateway'
alias kgagatew='kga gateway -o wide'
alias kgap='kga pods'
alias kgapw='kga pods -o wide'
alias kgas='kga services'
alias kgasw='kga services -o wide'
alias kgavs='kga virtualservice'
alias kgavsw='kga virtualservice -o wide'
alias kgo='kg -o yaml'
alias kgksa='kga all'
alias kgksaw='kg --namespace kube-system all -o wide'
alias kgn='kubectl get nodes'
alias kgnw='kubectl get nodes -o wide'
alias kgna='kg all'
alias kgna-istio='kgna -n istio-system'
alias kgnaw='kg all -o wide'
alias kgs='kg -n kube-system'
alias kgp='kg pods'
alias kl='kubectl logs'
alias kls='kubectl logs -n kube-system'
alias krs='kubectl rollout status'
alias ks='kubectl set'
alias ksi='kubectl set image'